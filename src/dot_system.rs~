use specs::prelude::*;
use super::{Name, DamageQueue, Bleeding, DamageAtom, }

pub struct BleedSystem {} //Damage over Time System

impl<'a> System<'a> for BleedSystem {
    type SystemData = ( Entities<'a>,
                        WriteStorage<'a, DamageQueue>,
                        WriteStorage<'a, Bleeding>,
                        WriteExpect<'a, Map>
                      );

    fn run (&mut self, data: Self::SystemData) {
        let (entities, mut damage_queues, mut log, mut bleed_storage, mut map) = data;

        for (ent, mut bleed) in (&entities, &mut bleed_storage).join() {
            DamageQueue::queue_damage(&mut damage_queues, target, DamageAtom::Bleed(1));
        }
    }
}


